{"ast":null,"code":"var _jsxFileName = \"/home/andre/Desktop/Histop\\xF3lio/histopolio/histopolio-app/client/src/App.js\";\nimport './App.css';\nimport { Component } from 'react';\nimport { w3cwebsocket } from 'websocket';\nimport Play from './app/play/Play';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new w3cwebsocket('ws://localhost:8080');\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showQuestion: false,\n      question: \"\",\n      answers: []\n    };\n    this.handleAnswer = this.handleAnswer.bind(this);\n  }\n\n  componentDidMount() {\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n      this.sendIdentificationMessage();\n    };\n\n    client.onmessage = message => {\n      console.log(message.data);\n      const dataReceived = JSON.parse(message.data);\n      this.processDataReceived(dataReceived);\n    };\n  }\n\n  sendIdentificationMessage() {\n    const dataToSend = {\n      type: 'identification',\n      id: 'react'\n    };\n    this.sendToServer(JSON.stringify(dataToSend));\n  }\n\n  sendToServer(message) {\n    client.send(message);\n  }\n\n  processDataReceived(dataReceived) {\n    const command = dataReceived['type'];\n\n    switch (command) {\n      case 'question':\n        this.handleQuestionReceived(dataReceived);\n        break;\n\n      default:\n        console.log('Unknown message: ' + dataReceived);\n    }\n  }\n\n  handleQuestionReceived(dataReceived) {\n    this.setState({\n      question: dataReceived['question'],\n      answers: dataReceived['answers'],\n      showQuestion: true\n    });\n  }\n\n  handleAnswer(answerIndex) {\n    this.setState({\n      showQuestion: false\n    });\n    const answer = answerIndex + 1;\n    const dataToSend = {\n      type: 'answer',\n      answer: answer\n    };\n    this.sendToServer(JSON.stringify(dataToSend));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Play, {\n        showQuestion: this.state.showQuestion,\n        question: this.state.question,\n        answers: this.state.answers,\n        onAnswer: this.handleAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/andre/Desktop/HistopÃ³lio/histopolio/histopolio-app/client/src/App.js"],"names":["Component","w3cwebsocket","Play","client","App","constructor","state","showQuestion","question","answers","handleAnswer","bind","componentDidMount","onopen","console","log","sendIdentificationMessage","onmessage","message","data","dataReceived","JSON","parse","processDataReceived","dataToSend","type","id","sendToServer","stringify","send","command","handleQuestionReceived","setState","answerIndex","answer","render"],"mappings":";AAAA,OAAO,WAAP;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;;AAEA,MAAMC,MAAM,GAAG,IAAIF,YAAJ,CAAiB,qBAAjB,CAAf;;AAEA,MAAMG,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,GAAG;AACV;AADU,SAMdC,KANc,GAMN;AACNC,MAAAA,YAAY,EAAE,KADR;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,OAAO,EAAE;AAHH,KANM;AAGV,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAQDC,EAAAA,iBAAiB,GAAG;AAClBT,IAAAA,MAAM,CAACU,MAAP,GAAgB,MAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AAEA,WAAKC,yBAAL;AACD,KAJD;;AAMAb,IAAAA,MAAM,CAACc,SAAP,GAAoBC,OAAD,IAAa;AAC9BJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,OAAO,CAACC,IAApB;AACA,YAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWJ,OAAO,CAACC,IAAnB,CAArB;AAEA,WAAKI,mBAAL,CAAyBH,YAAzB;AACD,KALD;AAMD;;AAEDJ,EAAAA,yBAAyB,GAAG;AAC1B,UAAMQ,UAAU,GAAG;AACjBC,MAAAA,IAAI,EAAE,gBADW;AAEjBC,MAAAA,EAAE,EAAE;AAFa,KAAnB;AAKA,SAAKC,YAAL,CAAkBN,IAAI,CAACO,SAAL,CAAeJ,UAAf,CAAlB;AACD;;AAEDG,EAAAA,YAAY,CAACT,OAAD,EAAU;AACpBf,IAAAA,MAAM,CAAC0B,IAAP,CAAYX,OAAZ;AACD;;AAEDK,EAAAA,mBAAmB,CAACH,YAAD,EAAe;AAChC,UAAMU,OAAO,GAAGV,YAAY,CAAC,MAAD,CAA5B;;AAEA,YAAOU,OAAP;AACE,WAAK,UAAL;AACE,aAAKC,sBAAL,CAA4BX,YAA5B;AACA;;AACF;AACEN,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBK,YAAlC;AALJ;AAOD;;AAEDW,EAAAA,sBAAsB,CAACX,YAAD,EAAe;AACnC,SAAKY,QAAL,CAAc;AACZxB,MAAAA,QAAQ,EAAEY,YAAY,CAAC,UAAD,CADV;AAEZX,MAAAA,OAAO,EAAEW,YAAY,CAAC,SAAD,CAFT;AAGZb,MAAAA,YAAY,EAAE;AAHF,KAAd;AAKD;;AAEDG,EAAAA,YAAY,CAACuB,WAAD,EAAc;AACxB,SAAKD,QAAL,CAAc;AAAEzB,MAAAA,YAAY,EAAE;AAAhB,KAAd;AAEA,UAAM2B,MAAM,GAAGD,WAAW,GAAG,CAA7B;AAEA,UAAMT,UAAU,GAAG;AACjBC,MAAAA,IAAI,EAAE,QADW;AAEjBS,MAAAA,MAAM,EAAEA;AAFS,KAAnB;AAKA,SAAKP,YAAL,CAAkBN,IAAI,CAACO,SAAL,CAAeJ,UAAf,CAAlB;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,YAAY,EAAE,KAAK7B,KAAL,CAAWC,YAA/B;AAA6C,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAAlE;AAA4E,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OAAhG;AAAyG,QAAA,QAAQ,EAAE,KAAKC;AAAxH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAhFyB;;AAmF5B,eAAeN,GAAf","sourcesContent":["import './App.css';\nimport { Component } from 'react';\nimport { w3cwebsocket } from 'websocket';\n\nimport Play from './app/play/Play';\n\nconst client = new w3cwebsocket('ws://localhost:8080');\n\nclass App extends Component {\n  constructor() {\n      super();\n\n      this.handleAnswer = this.handleAnswer.bind(this);\n  }\n\n  state = {\n    showQuestion: false,\n    question: \"\",\n    answers: []\n  };\n  \n  componentDidMount() {\n    client.onopen = () => {\n      console.log('WebSocket Client Connected')\n\n      this.sendIdentificationMessage()\n    }\n\n    client.onmessage = (message) => {\n      console.log(message.data)\n      const dataReceived = JSON.parse(message.data)\n\n      this.processDataReceived(dataReceived)\n    }\n  }\n\n  sendIdentificationMessage() {\n    const dataToSend = {\n      type: 'identification',\n      id: 'react'\n    }\n\n    this.sendToServer(JSON.stringify(dataToSend))\n  }\n\n  sendToServer(message) {\n    client.send(message)\n  }\n\n  processDataReceived(dataReceived) {\n    const command = dataReceived['type'];\n\n    switch(command) {\n      case 'question':\n        this.handleQuestionReceived(dataReceived)\n        break;\n      default:\n        console.log('Unknown message: ' + dataReceived);\n    }\n  }\n\n  handleQuestionReceived(dataReceived) {\n    this.setState({\n      question: dataReceived['question'],\n      answers: dataReceived['answers'],\n      showQuestion: true\n    });\n  }\n\n  handleAnswer(answerIndex) {\n    this.setState({ showQuestion: false });\n\n    const answer = answerIndex + 1;\n\n    const dataToSend = {\n      type: 'answer',\n      answer: answer\n    };\n\n    this.sendToServer(JSON.stringify(dataToSend));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Play showQuestion={this.state.showQuestion} question={this.state.question} answers={this.state.answers} onAnswer={this.handleAnswer} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}