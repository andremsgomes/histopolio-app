{"ast":null,"code":"var _jsxFileName = \"/home/andre/Desktop/Histop\\xF3lio/histopolio/histopolio-app/client/src/app/context/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, createContext, useContext } from \"react\";\nimport api from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\nfunction AuthProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n\n  async function login(email, password) {\n    const payload = {\n      email,\n      password\n    };\n    await api.login(payload).then(res => {\n      setUser(res.data);\n    }).catch(error => {\n      window.alert(error.message);\n    });\n  }\n\n  async function signup(name, email, password, passwordConfirmation) {\n    if (password !== passwordConfirmation) {\n      window.alert(\"Passwords não são iguais\");\n      return;\n    }\n\n    const payload = {\n      name,\n      email,\n      password\n    };\n    await api.login(payload).then(res => {\n      setUser(res.data);\n    }).catch(error => {\n      window.alert(error.message);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n\n_c = AuthProvider;\n\nconst useAuth = () => {\n  _s2();\n\n  return useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default AuthContext;\nexport { AuthProvider, useAuth };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/andre/Desktop/Histopólio/histopolio/histopolio-app/client/src/app/context/AuthContext.js"],"names":["React","useState","createContext","useContext","api","AuthContext","AuthProvider","children","user","setUser","login","email","password","payload","then","res","data","catch","error","window","alert","message","signup","name","passwordConfirmation","useAuth"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,UAAzC,QAA2D,OAA3D;AAEA,OAAOC,GAAP,MAAgB,QAAhB;;AAEA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;;AAEA,SAASI,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;;AAEA,iBAAeS,KAAf,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;AACpC,UAAMC,OAAO,GAAG;AAAEF,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAhB;AAEA,UAAMR,GAAG,CACNM,KADG,CACGG,OADH,EAEHC,IAFG,CAEGC,GAAD,IAAS;AACbN,MAAAA,OAAO,CAACM,GAAG,CAACC,IAAL,CAAP;AACD,KAJG,EAKHC,KALG,CAKIC,KAAD,IAAW;AAChBC,MAAAA,MAAM,CAACC,KAAP,CAAaF,KAAK,CAACG,OAAnB;AACD,KAPG,CAAN;AAQD;;AAED,iBAAeC,MAAf,CAAsBC,IAAtB,EAA4BZ,KAA5B,EAAmCC,QAAnC,EAA6CY,oBAA7C,EAAmE;AACjE,QAAIZ,QAAQ,KAAKY,oBAAjB,EAAuC;AACrCL,MAAAA,MAAM,CAACC,KAAP,CAAa,0BAAb;AACA;AACD;;AAED,UAAMP,OAAO,GAAG;AAAEU,MAAAA,IAAF;AAAQZ,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAAhB;AAEA,UAAMR,GAAG,CACNM,KADG,CACGG,OADH,EAEHC,IAFG,CAEGC,GAAD,IAAS;AACbN,MAAAA,OAAO,CAACM,GAAG,CAACC,IAAL,CAAP;AACD,KAJG,EAKHC,KALG,CAKIC,KAAD,IAAW;AAChBC,MAAAA,MAAM,CAACC,KAAP,CAAaF,KAAK,CAACG,OAAnB;AACD,KAPG,CAAN;AAQD;;AAED,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLb,MAAAA,IADK;AAELE,MAAAA;AAFK,KADT;AAAA,cAMGH;AANH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA5CQD,Y;;KAAAA,Y;;AA8CT,MAAMmB,OAAO,GAAG;AAAA;;AAAA,SAAMtB,UAAU,CAACE,WAAD,CAAhB;AAAA,CAAhB;;IAAMoB,O;;AAEN,eAAepB,WAAf;AAEA,SAASC,YAAT,EAAuBmB,OAAvB","sourcesContent":["import React, { useState, createContext, useContext } from \"react\";\n\nimport api from \"../api\";\n\nconst AuthContext = createContext();\n\nfunction AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n\n  async function login(email, password) {\n    const payload = { email, password };\n\n    await api\n      .login(payload)\n      .then((res) => {\n        setUser(res.data);\n      })\n      .catch((error) => {\n        window.alert(error.message);\n      });\n  }\n\n  async function signup(name, email, password, passwordConfirmation) {\n    if (password !== passwordConfirmation) {\n      window.alert(\"Passwords não são iguais\");\n      return;\n    }\n\n    const payload = { name, email, password };\n\n    await api\n      .login(payload)\n      .then((res) => {\n        setUser(res.data);\n      })\n      .catch((error) => {\n        window.alert(error.message);\n      });\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        login,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nconst useAuth = () => useContext(AuthContext);\n\nexport default AuthContext;\n\nexport { AuthProvider, useAuth };\n"]},"metadata":{},"sourceType":"module"}