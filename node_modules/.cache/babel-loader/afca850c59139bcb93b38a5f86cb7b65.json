{"ast":null,"code":"var _jsxFileName = \"/home/andre/Desktop/Histop\\xF3lio/histopolio/histopolio-app/client/src/app/pages/EditBoard.jsx\";\nimport React, { Component } from \"react\";\nimport api from \"../api\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction withParams(Component) {\n  var _s = $RefreshSig$();\n\n  return _s(props => {\n    _s();\n\n    return /*#__PURE__*/_jsxDEV(Component, { ...props,\n      params: useParams()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 21\n    }, this);\n  }, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n    return [useParams];\n  });\n}\n\nclass EditBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: null\n    };\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    api.boardData(this.props.params.board).then(res => {\n      console.log(res);\n      this.setState({\n        board: res.data\n      });\n    }).catch(error => {\n      console.log(error.message);\n    });\n  }\n\n  handleNameChange(e) {\n    const tileId = parseInt(e.target.id.substring(4));\n    const newGroupPropertyTiles = this.state.board.groupPropertyTiles.map(tile => {\n      if (tile.id === tileId) {\n        tile.tileName = parseInt(e.target.value);\n      }\n\n      return tile;\n    });\n    let newBoard = this.state.board;\n    newBoard.groupPropertyTiles = newGroupPropertyTiles;\n    this.setState({\n      board: newBoard\n    });\n  }\n\n  handleClick() {\n    let boardData = this.state.board;\n    boardData.groupPropertyTiles.forEach(tile => {\n      delete tile.questions;\n    });\n    const payload = {\n      boardData\n    };\n    console.log(payload);\n    api.updateBoard(payload).then(() => {}).catch(error => {\n      console.log(error.message);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tabela de casas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: this.props.params.board\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-hover mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Posi\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Pontos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Perguntas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.board && this.state.board.groupPropertyTiles.map(tile => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: tile.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"name\" + tile.id,\n                  onChange: this.handleNameChange,\n                  type: \"text\",\n                  value: tile.tileName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"points\" + tile.id,\n                  onChange: this.handlePointsChange,\n                  type: \"number\",\n                  value: tile.points\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [tile.questions.length, \" perguntas\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-lg btn-primary my-4\",\n        onClick: this.handleClick,\n        children: \"Guardar altera\\xE7\\xF5es\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withParams(EditBoard);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/andre/Desktop/Histop√≥lio/histopolio/histopolio-app/client/src/app/pages/EditBoard.jsx"],"names":["React","Component","api","useParams","withParams","props","EditBoard","constructor","state","board","handleNameChange","bind","handleClick","componentDidMount","boardData","params","then","res","console","log","setState","data","catch","error","message","e","tileId","parseInt","target","id","substring","newGroupPropertyTiles","groupPropertyTiles","map","tile","tileName","value","newBoard","forEach","questions","payload","updateBoard","render","handlePointsChange","points","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport api from \"../api\";\nimport { useParams } from \"react-router-dom\";\n\nfunction withParams(Component) {\n  return (props) => <Component {...props} params={useParams()} />;\n}\n\nclass EditBoard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  state = {\n    board: null,\n  };\n\n  componentDidMount() {\n    api\n      .boardData(this.props.params.board)\n      .then((res) => {\n        console.log(res);\n        this.setState({\n          board: res.data,\n        });\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  }\n\n  handleNameChange(e) {\n    const tileId = parseInt(e.target.id.substring(4));\n\n    const newGroupPropertyTiles = this.state.board.groupPropertyTiles.map((tile) => {\n      if (tile.id === tileId) {\n        tile.tileName = parseInt(e.target.value);\n      }\n\n      return tile;\n    });\n\n    let newBoard = this.state.board;\n    newBoard.groupPropertyTiles = newGroupPropertyTiles;\n\n    this.setState({\n      board: newBoard,\n    });\n  }\n\n  handleClick() {\n    let boardData = this.state.board;\n\n    boardData.groupPropertyTiles.forEach((tile) => {\n      delete tile.questions;\n    });\n\n    const payload = { boardData };\n\n    console.log(payload);\n\n    api\n      .updateBoard(payload)\n      .then(() => {})\n      .catch((error) => {\n        console.log(error.message);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"text-center mt-4\">\n        <h1>Tabela de casas</h1>\n        <h4>{this.props.params.board}</h4>\n        <table className=\"table table-hover mt-4\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Posi√ß√£o</th>\n              <th scope=\"col\">Nome</th>\n              <th scope=\"col\">Pontos</th>\n              <th scope=\"col\">Perguntas</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.board &&\n              this.state.board.groupPropertyTiles.map((tile) => {\n                return (\n                  <tr>\n                    <th scope=\"row\">{tile.id}</th>\n                    <td>\n                      <input\n                        id={\"name\" + tile.id}\n                        onChange={this.handleNameChange}\n                        type=\"text\"\n                        value={tile.tileName}\n                      />\n                    </td>\n                    <td>\n                      <input\n                        id={\"points\" + tile.id}\n                        onChange={this.handlePointsChange}\n                        type=\"number\"\n                        value={tile.points}\n                      />\n                    </td>\n                    <td>{tile.questions.length} perguntas</td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n        <button\n          className=\"btn btn-lg btn-primary my-4\"\n          onClick={this.handleClick}\n        >\n          Guardar altera√ß√µes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default withParams(EditBoard);\n"]},"metadata":{},"sourceType":"module"}